// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rehype prism with language 1`] = `
"<pre class="language-javascript"><code class="language-javascript"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span>
</code></pre>"
`;

exports[`rehype prism with line-numbers plugin 1`] = `
"<pre class="language-javascript line-numbers"><code class="language-javascript"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>"
`;

exports[`rehype prism with toolbar plugin 1`] = `
"<div class="code-toolbar"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span>
</code></pre><div class="toolbar"><div class="toolbar-item"><button type="button" class="copy-to-clipboard-button" onclick="(function(button){
    const setting = {&#x22;copy&#x22;:&#x22;Copy&#x22;,&#x22;copy-error&#x22;:&#x22;Press Ctrl+C to copy&#x22;,&#x22;copy-success&#x22;:&#x22;Copied!&#x22;,&#x22;copy-timeout&#x22;:5000}
    const span = button.querySelector(&#x27;span&#x27;)

    function setState(state) {
      span.textContent = setting[state];
      button.setAttribute(&#x27;data-copy-state&#x27;, state);
    }

    function resetButtonText() {
      setTimeout(function () {
        setState(&#x27;copy&#x27;);
      }, setting[&#x27;copy-timeout&#x27;]);
    }

    function onSuccess() {
      setState(&#x27;copy-success&#x27;);
      resetButtonText();
    }

    function onError(error) {
      error &#x26;&#x26; console.error(error)
      setState(&#x27;copy-error&#x27;);
      resetButtonText();
    }

    function fallbackCopyTextToClipboard(str) {
      var textArea = document.createElement(&#x27;textarea&#x27;);
      textArea.value = str

      // Avoid scrolling to bottom
      textArea.style.top = &#x27;0&#x27;;
      textArea.style.left = &#x27;0&#x27;;
      textArea.style.position = &#x27;fixed&#x27;;

      document.body.appendChild(textArea);
      textArea.focus();
      textArea.select();

      try {
        var successful = document.execCommand(&#x27;copy&#x27;);
        setTimeout(function () {
          if (successful) onSuccess()
          else onError()

        }, 1);
      } catch (err) {
        setTimeout(function () {
          onError(err)
        }, 1);
      }

      document.body.removeChild(textArea);
    }

    function copyTextToClipboard(str) {
      if (navigator.clipboard) {
        navigator.clipboard.writeText(str)
          .then(onSuccess, function () {
            fallbackCopyTextToClipboard(str);
          });
      } else {
        fallbackCopyTextToClipboard(str);
      }
    }

    copyTextToClipboard(&#x22;const a = 1\\n&#x22;)
  })(this)"><span>Copy</span></button></div></div></div>"
`;

exports[`rehype prism without language 1`] = `
"<pre><code>const a = 1
</code></pre>"
`;
